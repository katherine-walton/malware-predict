import xgboost as XGB
from xgboost import XGBClassifier
from sklearn.metrics import auc, roc_curve, roc_auc_score
from sklearn.metrics import accuracy_score
import preprocessing

def xgboost(xTrain, yTrain, xTest, yTest):
	xgb = XGBClassifier(num_rounds = 1, learning_rate = 1, max_depth = 3)
	xgb.fit(xTrain, yTrain.ravel())
	yHatProb = xgb.predict_proba(xTest)
	yHatRound = [round(value) for value in yHatProb[:,1]]
	yHat = yHatProb[:,1]
	accuracy = accuracy_score(yTest, yHatRound)
	return yHat


def main():
	xTrain, yTrain, xTest, yTest = preprocessing.main()
	yHat = xgboost(xTrain, yTrain, xTest, yTest)
	fpr, tpr, _ = roc_curve(yTest, yHat)
	roc_auc = auc(fpr, tpr)
	print("AUC for XGBoost", roc_auc)
	# print("Accuracy of XGBoost: ", accuracy)


if __name__ == "__main__":
	main()